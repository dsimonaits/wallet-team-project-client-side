{"version":3,"file":"static/js/138.6e9408d6.chunk.js","mappings":"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","sources":["services/api/currenciesApi.js","components/Currency/Currency.styled.js","components/Currency/Currency.jsx","redux/finance/financeSelectors.js"],"sourcesContent":["import axios from 'axios';\n\nconst CURRENCY_CACHE_KEY = 'currencyCache';\nconst CACHE_TTL = 86400000;\n\nconst currenciesApi = async () => {\n  const cachedResponse = localStorage.getItem(CURRENCY_CACHE_KEY);\n\n  if (cachedResponse) {\n    const { data, timestamp } = JSON.parse(cachedResponse);\n    const lastRequest = Date.now() - timestamp;\n\n    if (lastRequest < CACHE_TTL) {\n      return data;\n    }\n  }\n\n  try {\n    const response = await axios(\n      'https://wallet-team-project-hg8k.onrender.com/api/currenciesApi'\n    );\n    const responseData = response.data.ResponseBody;\n\n    localStorage.setItem(\n      CURRENCY_CACHE_KEY,\n      JSON.stringify({\n        data: responseData,\n        timestamp: Date.now(),\n      })\n    );\n\n    return responseData;\n  } catch (error) {}\n};\n\nexport default currenciesApi;\n","import styled from 'styled-components';\nimport mobileBackground from '../../images/currencies/background-image-mobile.png';\nimport background from '../../images/currencies/background-image.png';\nimport tabletBackground from '../../images/currencies/background-image-tablet.png';\n\nexport const CurrencyWrapper = styled.div`\n  position: relative;\n  background-repeat: no-repeat;\n  background-position: bottom;\n  @media screen and (min-width: 320px) {\n    width: 280px;\n    min-height: 174px;\n    border-radius: 30px;\n    margin: 0 auto;\n\n    background-image: url(${mobileBackground});\n\n    background-color: var(--ascent-text-color);\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 336px;\n    height: 182px;\n    border-radius: 30px;\n\n    background-image: url(${tabletBackground});\n\n    background-color: var(--ascent-text-color);\n  }\n  @media screen and (min-width: 1280px) {\n    width: 393px;\n    min-height: 331px;\n    border-radius: 30px;\n    margin: 0;\n\n    background-image: url(${background});\n\n    background-color: var(--ascent-text-color);\n  }\n`;\n\nexport const Table = styled.table`\n  font-family: var(--primary-font-family);\n  color: var(--primary-white-color);\n  text-align: center;\n\n  @media screen and (min-width: 320px) {\n    width: 280px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 336px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 393px;\n\n    thead tr th {\n      text-align: center;\n    }\n  }\n\n  border-collapse: collapse;\n\n  thead th:first-child {\n    border-top-left-radius: 30px;\n  }\n\n  thead th:last-child {\n    border-top-right-radius: 30px;\n  }\n\n  thead tr th {\n    background-color: var(--ascent-text-color2);\n    line-height: 50px;\n    width: calc(100% / 3);\n  }\n\n  tbody tr td {\n    vertical-align: top;\n    line-height: 50px;\n  }\n\n  tbody tr:last-child td {\n    height: 20px;\n    line-height: 20px;\n    background-color: transparent;\n    border: none;\n  }\n`;\n","import currenciesApi from '../../services/api/currenciesApi';\nimport currenCiesList from './currenciesList.json';\nimport { useState, useEffect } from 'react';\nimport { Table, CurrencyWrapper } from './Currency.styled';\nimport { selectIsLoading } from 'redux/finance/financeSelectors';\nimport Spinner from 'components/Spinner/Spinner';\nimport { useSelector } from 'react-redux';\n\nconst Currency = () => {\n  const [currencyCourse, setCurrencyCourse] = useState(null);\n\n  const fetching = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    const fetchCurrencies = async () => {\n      try {\n        const currencies = await currenciesApi();\n\n        setCurrencyCourse(currencies.data);\n        return;\n      } catch (error) {\n      } finally {\n      }\n    };\n\n    fetchCurrencies();\n  }, []);\n\n  return (\n    <CurrencyWrapper>\n      {fetching ? (\n        <Spinner />\n      ) : (\n        <Table>\n          <thead>\n            <tr>\n              <th>Currency</th>\n              <th>Purchase</th>\n              <th>Sale</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {currencyCourse &&\n              currencyCourse.map((item, index) => {\n                const currencyCode = item.currencyCodeA;\n                const currencyCodeToString = currencyCode.toString();\n                const currencyName = currenCiesList[currencyCodeToString];\n\n                if (\n                  currenCiesList[currencyCodeToString] &&\n                  !(item.currencyCodeA === 978 && item.currencyCodeB === 840)\n                ) {\n                  return (\n                    <tr key={index}>\n                      <td>{currencyName}</td>\n                      <td>{item.rateBuy.toFixed(2)}</td>\n                      <td>{item.rateSell.toFixed(2)}</td>\n                    </tr>\n                  );\n                }\n                return null;\n              })}\n          </tbody>\n        </Table>\n      )}\n    </CurrencyWrapper>\n  );\n};\n\nexport default Currency;\n","export const selectTransactions = state => state.finance.transactions;\n\nexport const selectCurrentPage = state => state.finance.currentPage;\n\nexport const selectIsLoading = state => state.finance.isLoading;\n\nexport const selectFinanceError = state => state.finance.error;\nexport const selectFilter = state => state.finance.filter;\nexport const selectStatistic = state => state.finance.statistic;\n"],"names":["CURRENCY_CACHE_KEY","currenciesApi","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","cachedResponse","_JSON$parse","data","timestamp","response","responseData","wrap","_context","prev","next","localStorage","getItem","JSON","parse","Date","now","abrupt","axios","sent","ResponseBody","setItem","stringify","t0","stop","apply","arguments","CurrencyWrapper","styled","_templateObject","_taggedTemplateLiteral","Table","_templateObject2","_useState","useState","_useState2","_slicedToArray","currencyCourse","setCurrencyCourse","fetching","useSelector","selectIsLoading","useEffect","fetchCurrencies","currencies","finish","_jsx","children","Spinner","_jsxs","map","item","index","currencyCodeToString","currencyCodeA","toString","currencyName","currenCiesList","currencyCodeB","rateBuy","toFixed","rateSell","selectTransactions","state","finance","transactions","isLoading","selectStatistic","statistic"],"sourceRoot":""}