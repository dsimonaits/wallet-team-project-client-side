{"version":3,"file":"static/js/472.293a7d46.chunk.js","mappings":"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","sources":["components/UpdateForm/UpdateForm.styled.js","components/UpdateForm/UpdateForm.jsx","components/Table/Table.styled.js","components/Table/Table.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Div = styled.div`\n  background-color: var(--primary-white-color);\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\nexport const LabelTitle = styled.label`\n  font-size: 24px;\n  font-weight: 400;\n  margin: 20px 20px 40px 20px;\n  color: rgba(0, 0, 0, 1);\n`;\nexport const ModalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  padding-top: 40px;\n  width: 320px;\n  height: auto;\n`;\n\nexport const Expense = styled.p`\n  font-size: 16px;\n  font-weight: 700;\n  margin: 0 11px;\n\n  color: ${props => props.theme.expense};\n`;\nexport const Income = styled.p`\n  font-size: 16px;\n  font-weight: 700;\n  margin: 0 11px;\n  color: ${props => props.theme.income};\n`;\n\nexport const NumberInput = styled.input`\n  width: 181px;\n  border: transparent;\n  border-bottom: 1px solid #e0e0e0;\n  color: rgba(0, 0, 0, 1);\n  font-size: 18px;\n  outline: none;\n  /* &:focus {\n    border-color:transparent} */\n`;\nexport const Select = styled.select`\n  width: 394px;\n  border: transparent;\n  border-bottom: 1px solid #e0e0e0;\n  color: rgba(0, 0, 0, 1);\n  font-size: 18px;\n  outline: none;\n  margin-bottom: 40px;\n`;\nexport const MenuInputs = styled.div`\n  display: flex;\n  align-items: center;\n`;\nexport const ItemInput = styled.div`\n  margin-bottom: 40px;\n  padding: 0 20px;\n`;\nexport const Textarea = styled.textarea`\n  width: 394px;\n  border: transparent;\n  border-bottom: 1px solid #e0e0e0;\n  color: rgba(0, 0, 0, 1);\n  font-size: 18px;\n  outline: none;\n  resize: none;\n  height: 30px;\n`;\nexport const ToggleContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 40px;\n  width: 100%;\n`;\n// export const AddBtn = styled.button`\n//   width: 44px;\n//   height: 44px;\n//   //padding:20px;\n//   border-radius: 50%;\n//   color: rgba(255, 255, 255, 1);\n//   font-size: 30px;\n//   font-weight: 100;\n//   border: 1px solid #ffffff;\n//   background-color: rgba(36, 204, 167, 1);\n//   position: fixed;\n//   bottom: 40px;\n//   right: 40px;\n//   cursor: pointer;\n// `;\nexport const CloseButton = styled.button`\n  height: fit-content;\n  padding: unset;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\n// export const AddIcon = styled.svg`\n//   width: 20px;\n//   height: 20px;\n// `;\nexport const MenuBtn = styled.ul`\n  list-style: none;\n  padding-left: 0px;\n`;\nexport const ExitButton = styled.button`\n  width: 300px;\n  padding-top: 13px;\n  padding-left: 61px;\n  padding-bottom: 13px;\n  padding-right: 55px;\n  margin-top: 20px;\n\n  background-color: var(--primary-white-color);\n  cursor: pointer;\n  border: 1px solid var(--ascent-text-color);\n  border-radius: 20px;\n\n  text-align: center;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--ascent-text-color);\n\n  transition: var(--transition);\n  &:hover,\n  &:focus {\n    box-shadow: -4px 4px 6px 0 rgba(255, 255, 255, 0.5),\n      -4px 4px 6px 0 rgba(116, 125, 139, 0.5),\n      inset -4px -4px 6px 0 rgba(255, 255, 255, 0.5),\n      inset -4px -4px 6px 0 rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport const AddButton = styled.button`\n  width: 300px;\n  padding: 13px 100px;\n  background-color: var(--greenblue);\n  cursor: pointer;\n  border: none;\n  border-radius: 20px;\n\n  text-align: center;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--primary-white-color);\n\n  transition: var(--transition);\n  &:hover,\n  &:focus {\n    box-shadow: -4px 4px 6px 0 rgba(255, 255, 255, 0.5),\n      -4px 4px 6px 0 rgba(116, 125, 139, 0.5),\n      inset -4px -4px 6px 0 rgba(255, 255, 255, 0.5),\n      inset -4px -4px 6px 0 rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport const ButtonItem = styled.li`\n  margin-bottom: 20px;\n`;\n/* gvhjbkkkkkkkkkkkkkkkkkkkkk */\n\nexport const LabelEdit = styled.label`\n  /* position: relative; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  height: 40px;\n  /* display: inline-block; */\n  /* border-radius:40%; */\n  /* background-color: green; */\n`;\n// export const AddIconToggle = styled.svg`\n//   width: 20px;\n//   height: 20px;\n// `;\n\nexport const Slider = styled.span`\n  position: absolute;\n  cursor: pointer;\n  border-radius: 32px;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border: solid 1px rgba(224, 224, 224, 1);\n  background-color: transparent;\n  &:before {\n    content: '';\n    background-image: url('../../images/Plusbtn.png');\n    position: absolute;\n    width: 44px;\n    height: 44px;\n    top: -3px;\n    border-radius: 50%;\n    background-color: rgba(36, 204, 167, 1);\n    /* color:rgba(255, 255, 255, 1);  */\n    font-size: 30px;\n    font-weight: 100;\n    border: 1px solid #ffffff;\n    background-color: rgba(36, 204, 167, 1);\n    transition-property: background-color, transform;\n    transition-duration: 500ms;\n  }\n`;\n\n/* &:before{\n    content:`${props}`\n  } */\nexport const Checkbox = styled.input`\n  opacity: 0;\n  width: 0;\n  height: 0;\n\n  &:checked + ${Slider} {\n    /* background: green; */\n\n    &:before {\n      transform: translateX(40px);\n      background-color: rgba(255, 101, 150, 1);\n    }\n  }\n`;\nexport const SpanSlash = styled.span`\n  color: #e0e0e0;\n`;\n","import * as React from 'react';\n// import { AddBtn } from './AddButton.styled';\nimport Datetime from 'react-datetime';\n\nimport 'react-datetime/css/react-datetime.css';\n\nimport { ThemeProvider } from 'styled-components';\n\nimport {\n  Form,\n  //   AddIcon,\n  LabelTitle,\n  Expense,\n  ToggleContainer,\n  NumberInput,\n  MenuInputs,\n  ItemInput,\n  Textarea,\n  ExitButton,\n  AddButton,\n  ButtonItem,\n  Select,\n  Checkbox,\n  MenuBtn,\n  Income,\n  SpanSlash,\n  LabelEdit,\n} from './UpdateForm.styled';\n// import { SelectFunk } from './Select';\n\n// import { Formik } from 'formik';\n// import sprite from '../../images/sprite.svg';\n// import Modal from '../Modal/Modal';\nimport { useState } from 'react';\nimport {\n  useDispatch,\n  // useSelector\n} from 'react-redux';\n// import { Switch } from '../Switch/switch';\n// import { string } from 'prop-types';\n// import { Label } from 'components/Switch/switch.styled';\n// import { toggleModalEditTransaction } from '../../redux/global/globalSlice';\n// import { selectIsModalEditTransactionOpen } from '../../redux/global/globalSelectors';\n// import { addTransaction } from '../../redux/finance/financeSlice';\nimport { updateTransaction } from '../../redux/finance/financeOperations';\n\nconst UpdateForm = ({ toggleModal, transactionUpdate }) => {\n  const [startDate] = useState([new Date()]);\n  const [sum, setSum] = useState('');\n  const [category, setCategory] = useState('');\n  const [comment, setComment] = useState('');\n  const [onSwitch, setOnSwitch] = useState(true);\n  const [theme, setTheme] = useState('themeInc');\n  const isThemeExpense = theme === 'themeExp';\n  const dispatch = useDispatch();\n  //   const isEditModalIsOpen = useSelector(selectIsModalEditTransactionOpen);\n\n  const toggleTheme = () => {\n    setTheme(isThemeExpense ? 'greenText' : 'themeExp');\n  };\n\n  const handleChangeSwitch = () => {\n    setOnSwitch(!onSwitch);\n    toggleTheme();\n  };\n  const handleCashChange = e => setSum(e.target.value);\n\n  const handelChangeTextarea = e => setComment(e.target.value);\n\n  const handelSubmit = e => {\n    e.preventDefault();\n    switch (onSwitch) {\n      case true:\n        const resIncome = dispatch(\n          updateTransaction({\n            type: onSwitch,\n            sum: sum,\n            category: 'Other',\n            date: startDate[0],\n            comment: comment,\n          })\n        );\n        console.log(resIncome);\n        break;\n      case false:\n        const resExpenses = dispatch(\n          updateTransaction({\n            type: onSwitch,\n            sum: sum,\n            category: category,\n            date: startDate[0],\n            comment: comment,\n          })\n        );\n        console.log(resExpenses);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const themeInc = {\n    income: '#24CCA7' /*'Tealish'Matching Pantone */,\n    // expense:\"#FF6596\"\n  };\n  const themeExp = {\n    //  income: \"#24CCA7\", /*'Tealish'Matching Pantone */\n    expense: '#FF6596',\n  };\n\n  // DATE formatter //////////////////////////////////////////\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    return `${day < 10 ? '0' : ''}${day}.${\n      month < 10 ? '0' : ''\n    }${month}.${year}`;\n  }\n\n  return (\n    <>\n      <ThemeProvider theme={isThemeExpense ? themeExp : themeInc}>\n        <Form onSubmit={handelSubmit}>\n          <LabelTitle htmlFor=\"\">Edit transaction</LabelTitle>\n          <ToggleContainer>\n            <LabelEdit>\n              <Income>Income</Income>\n              <SpanSlash>/</SpanSlash>\n              <Expense>Expense</Expense>\n              <Checkbox\n                name=\"onSwitch\"\n                value={onSwitch}\n                type=\"checkbox\"\n                onClick={handleChangeSwitch}\n              />\n            </LabelEdit>\n          </ToggleContainer>\n\n          {!onSwitch && (\n            <div>\n              <Select\n                value={category}\n                onChange={e => setCategory(e.target.value)}\n              >\n                <option value=\"Main expenses\">Main expenses</option>\n                <option value=\"Car\">Car</option>\n                <option value=\"Self care\">Self care</option>\n                <option value=\"Child care\">Child care</option>\n                <option value=\"Household products\">Household products</option>\n                <option value=\"Education\">Education</option>\n                <option value=\"Leisure\">Leisure</option>\n                <option value=\"Other\">Other expenses</option>\n              </Select>\n            </div>\n          )}\n\n          <MenuInputs>\n            <ItemInput>\n              <NumberInput\n                size=\"small\"\n                id=\"filled-number\"\n                type=\"number\"\n                placeholder=\"0.00\"\n                name=\"sum\"\n                value={transactionUpdate.sum}\n                onChange={handleCashChange}\n              />\n            </ItemInput>\n            <ItemInput>\n              <Datetime\n                timeFormat={false}\n                placeholder={transactionUpdate.date}\n                value={formatDate(transactionUpdate.date)}\n                inputProps={{\n                  style: {\n                    height: 'auto',\n                    width: '181px',\n                    border: 'transparent',\n                    borderBottom: '1px solid #E0E0E0',\n                    color: 'rgba(0, 0, 0, 1) ',\n                    outline: 'none',\n                  },\n                }}\n                dateFormat=\"yyyy-MM-DD\"\n                isValidDate={current => {\n                  const today = new Date();\n                  const oneDay = 24 * 60 * 60 * 1000; // number of milliseconds in one day\n                  const yesterday = new Date(today.getTime() - oneDay);\n                  const date = current.isAfter(yesterday);\n                  return date;\n                }}\n              />\n            </ItemInput>\n          </MenuInputs>\n          <ItemInput>\n            <Textarea\n              value={transactionUpdate.comment}\n              onChange={handelChangeTextarea}\n              name=\"comment\"\n              rows=\"3\"\n              placeholder=\"Comment\"\n            />\n          </ItemInput>\n\n          <MenuBtn>\n            <ButtonItem>\n              <AddButton type=\"submit\">SAVE</AddButton>\n            </ButtonItem>\n            <ButtonItem>\n              <ExitButton type=\"button\" onClick={toggleModal}>\n                Cancel\n              </ExitButton>\n            </ButtonItem>\n          </MenuBtn>\n        </Form>\n      </ThemeProvider>\n    </>\n  );\n};\n\nexport default UpdateForm;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  overflow-y: auto;\n  height: 350px;\n  display: flex;\n  justify-content: start;\n  align-items: flex-start;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    width: 714px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 725px;\n  }\n\n  ::-webkit-scrollbar {\n    width: 8px;\n    height: 8px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: #dcdcdf;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 20px;\n    width: 20px;\n    height: 20px;\n    background-color: #24cca7;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background-color: #ff6596;\n    /* box-shadow: 0 0 10px #ff6596; */\n  }\n`;\n\nexport const LoadMoreBtn = styled.button`\n  color: #ffffff;\n  background-color: #24cca7;\n  border: none;\n  padding: 4px 12px;\n  border-radius: 20px;\n  margin: 10px auto;\n  cursor: pointer;\n  transition: box-shadow 250ms ease-in-out, background-color 250ms ease-in-out;\n\n  :hover {\n    /* background-color: #24f0a7; */\n    box-shadow: 0 0 8px #24cca7;\n  }\n`;\n\n// MOBILE ////////////////////////////////////////\nexport const NoTransactionMob = styled.div`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 1.5;\n  padding: 10px;\n  text-align: center;\n  width: 100%;\n`;\n\nexport const SpanNoTran = styled.span`\n  font-size: 20px;\n  color: #bdbdbd;\n`;\n\nexport const MobileCardWrapper = styled.div`\n  width: 280px;\n  margin: 0 auto;\n`;\n\nexport const TransactionList = styled.ul`\n  padding: 0;\n  background: #ffffff;\n  justify-content: center;\n  list-style: none;\n  border-radius: 10px;\n  margin: 8px;\n  overflow: hidden;\n`;\n\nexport const TransactionItem = styled.li`\n  padding: 12px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-left: 5px solid\n    ${props => (props.type === 'true' ? '#24cca7' : '#ff6596')};\n  cursor: default;\n  :not(:last-child) {\n    border-bottom: 1px solid #dcdcdf;\n  }\n`;\n\nexport const TitleText = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n`;\n\nexport const Text = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: right;\n  padding-left: 5px;\n\n  .cursor {\n    cursor: pointer;\n  }\n`;\n\nexport const TextSum = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: right;\n  color: ${props => (props.type === 'true' ? '#24cca7' : '#ff6596')};\n`;\n\nexport const IconBtnMobile = styled.img`\n  width: 14px;\n  height: 14px;\n  margin-right: 5px;\n`;\n\nexport const EditBtnMobile = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 0;\n  padding: 4px;\n  border-radius: 20px;\n  border: none;\n  background: none;\n  cursor: pointer;\n  transition: box-shadow 250ms ease-in-out, background 250ms ease-in-out;\n\n  :hover {\n    /* background: #24cca7; */\n    box-shadow: 0 0 10px #24cca7;\n  }\n`;\n\n// DESCTOP //////////////////////////////////////////////\n\nexport const NoTransaction = styled.div`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 40px;\n  line-height: 1.5;\n  padding: 10px;\n  text-align: center;\n  width: 100%;\n`;\n\nexport const TableWrapper = styled.table`\n  padding: 10px;\n  border-collapse: collapse;\n  max-height: 310px;\n  margin: 0 auto;\n  table-layout: fixed;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 714px;\n  }\n`;\n\nexport const Thead = styled.thead``;\n\nexport const Tr = styled.tr`\n  position: relative;\n  padding: 10px;\n  cursor: default;\n\n  ::after {\n    content: ' ';\n    top: 0;\n    left: 0;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: #fff;\n    border-radius: 30px;\n    z-index: -1;\n  }\n`;\n\nexport const TrWrapperTable = styled.tr`\n  padding: 10px;\n  /* height: 80px; */\n  cursor: default;\n\n  :not(:last-child) {\n    border-bottom: 1px solid #dcdcdf;\n    box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n  }\n`;\n\nexport const Th = styled.th`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n  padding: 10px;\n  text-align: center;\n  width: 15%;\n`;\n\nexport const LargeTh = styled.th`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n  padding: 10px;\n  text-align: center;\n  width: 20%;\n`;\n\nexport const ThSum = styled.th`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n  padding: 10px;\n  text-align: right;\n  width: 15%;\n`;\n////////////////////////////////////////////////////////////\n\nexport const TbodyWrapper = styled.tbody``;\n\nexport const Td = styled.td`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  padding: 10px;\n  text-align: center;\n  width: 15%;\n\n  .cursor {\n    cursor: pointer;\n  }\n`;\n\nexport const LargeTd = styled.td`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  padding: 10px;\n  text-align: center;\n  width: 15%;\n\n  .cursor {\n    cursor: pointer;\n  }\n  width: 20%;\n`;\n\nexport const TableSum = styled.td`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  padding: 10px;\n  text-align: right;\n  color: ${props => (props.type === 'true' ? '#24cca7' : '#ff6596')};\n`;\n\n////////////////////////////////////////////////////////\n\nexport const TableBtn = styled.td`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: right;\n  padding: 10px 0 10px 10px;\n  /* gap: 5px; */\n`;\n\nexport const IconBtn = styled.img`\n  width: 14px;\n  height: 14px;\n`;\n\nexport const EditBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  border: none;\n  width: 20px;\n  height: 20px;\n  background: none;\n  cursor: pointer;\n  transition: box-shadow 250ms ease-in-out, background 250ms ease-in-out;\n\n  :hover {\n    box-shadow: 0 0 10px #24cca7;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  color: #ffffff;\n  background-color: #24cca7;\n  border: none;\n  padding: 4px 12px;\n  border-radius: 20px;\n  margin: 0 5px;\n  cursor: pointer;\n  transition: box-shadow 250ms ease-in-out, background-color 250ms ease-in-out;\n\n  :hover {\n    box-shadow: 0 0 8px #24cca7;\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  deleteTransaction,\n  // loadMoreTransactions,\n} from '../../redux/finance/financeOperations';\nimport {\n  // selectIsLoading,\n  selectTransactions,\n} from '../../redux/finance/financeSelectors';\nimport EllipsisText from 'react-ellipsis-text';\n// import data from './data.json';\nimport icon from '../../images/pencil.png';\n// import Modal from 'components/Modal/Modal';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Edit /////////////////////\nimport Modal from 'components/Modal/Modal';\nimport UpdateForm from 'components/UpdateForm/UpdateForm';\nimport { toggleModalEditTransaction } from '../../redux/global/globalSlice';\nimport { selectIsModalEditTransactionOpen } from '../../redux/global/globalSelectors';\n\n// STYLE ////////////////////////////////////\nimport {\n  NoTransaction,\n  SpanNoTran,\n  NoTransactionMob,\n  Wrapper,\n  // LoadMoreBtn,\n  MobileCardWrapper,\n  TransactionList,\n  TransactionItem,\n  TitleText,\n  Text,\n  TextSum,\n  EditBtnMobile,\n  IconBtnMobile,\n  TableWrapper,\n  TbodyWrapper,\n  Thead,\n  Tr,\n  TrWrapperTable,\n  Th,\n  LargeTh,\n  ThSum,\n  Td,\n  LargeTd,\n  TableSum,\n  TableBtn,\n  EditBtn,\n  IconBtn,\n  DeleteBtn,\n} from './Table.styled';\n\n// COMPONENT //////////////////////////////////////////////////////\n\nconst Table = () => {\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n  const [transactionUpdate, setTransactionUpdate] = useState(null);\n  const [expandedRows, setExpandedRows] = useState({});\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [isDeleting, setIsDeleting] = useState(false);\n\n  const transactions = useSelector(selectTransactions);\n  const isEditModalIsOpen = useSelector(selectIsModalEditTransactionOpen);\n  // const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // dispatch(fetchTransactions());\n\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, [dispatch]);\n  console.log(transactionUpdate);\n\n  const handleResize = () => {\n    setIsMobile(window.innerWidth <= 767);\n  };\n\n  const handleEdit = transactionId => {\n    const transaction = transactions.find(({ _id }) => _id === transactionId);\n    setTransactionUpdate(transaction);\n    toggleModal();\n  };\n\n  // // const handleDelete = async rowId => {\n  // //   try {\n  // //     setIsDeleting(true);\n  // //     await dispatch(deleteTransaction(rowId));\n  // //   } catch (error) {\n  // //     console.log(error);\n  // //   } finally {\n  // //     setIsDeleting(false);\n  // //   }\n  // // };\n\n  // const handleDelete = () => {\n  //   setIsDeleting(true);\n  // };\n\n  // useEffect(() => {\n  //   const deleteItem = async () => {\n  //     try {\n  //       await dispatch(deleteTransaction(transactions._id));\n  //     } catch (error) {\n  //       console.log(error);\n  //     } finally {\n  //       setIsDeleting(false);\n  //     }\n  //   };\n  //   if (isDeleting) {\n  //     deleteItem();\n  //   }\n  // }, [isDeleting, dispatch, transactions._id]);\n\n  // Load moer transactions///////////////\n  // const handleLoadMore = async () => {\n  //   dispatch(loadMoreTransactions(currentPage + 1));\n  // };\n\n  const toggleModal = () => {\n    // setTransactionUpdate(null);\n    dispatch(toggleModalEditTransaction());\n  };\n\n  // DATE formatter //////////////////////////////////////////\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    return `${day < 10 ? '0' : ''}${day}.${\n      month < 10 ? '0' : ''\n    }${month}.${year}`;\n  }\n\n  // SUM formatter /////////////////////////////////\n  // const formatter = new Intl.NumberFormat('en-US', {\n  //   style: 'currency',\n  //   currency: 'USD',\n  // });\n\n  // TOGGLE for comment //////////////////////////////////\n  function toggleRow(rowId) {\n    setExpandedRows({\n      ...expandedRows,\n      [rowId]: !expandedRows[rowId],\n    });\n  }\n\n  // MOBILE ///////////////////////////////////////////////////////\n\n  if (isMobile) {\n    return (\n      <MobileCardWrapper>\n        {isEditModalIsOpen && (\n          <Modal onClose={toggleModal}>\n            {/* {transactionUpdate && transactionUpdate._id === row._id && ( */}\n            <UpdateForm\n              transactionUpdate={transactionUpdate}\n              toggleModal={toggleModal}\n            />\n            {/* )} */}\n          </Modal>\n        )}\n        <ToastContainer />\n        {transactions.length > 0 ? (\n          transactions.map(row => (\n            <TransactionList key={row._id}>\n              <TransactionItem type={row.type.toString()}>\n                <TitleText>Date:</TitleText> <Text>{formatDate(row.date)}</Text>\n              </TransactionItem>\n              <TransactionItem type={row.type.toString()}>\n                <TitleText>Type:</TitleText>\n                {row.type.toString() === 'true' ? (\n                  <Text>+</Text>\n                ) : (\n                  <Text>-</Text>\n                )}\n              </TransactionItem>\n              <TransactionItem type={row.type.toString()}>\n                <TitleText>Category:</TitleText>\n                <Text>\n                  {row.type.toString() === 'true' ? (\n                    <Text>Income</Text>\n                  ) : (\n                    <Text>{row.category}</Text>\n                  )}\n                </Text>\n              </TransactionItem>\n              <TransactionItem type={row.type.toString()}>\n                <TitleText>Comment:</TitleText>\n                <Text>\n                  {row.comment ? (\n                    <EllipsisText\n                      className=\"cursor\"\n                      onClick={() => toggleRow(row._id)}\n                      text={row.comment}\n                      length={expandedRows[row._id] ? 100 : 15}\n                    />\n                  ) : (\n                    '-'\n                  )}\n                </Text>\n              </TransactionItem>\n              <TransactionItem type={row.type.toString()}>\n                <TitleText>Sum:</TitleText>\n                <TextSum type={row.type.toString()}>\n                  {row.sum\n                    .toLocaleString('ru-RU', {\n                      minimumIntegerDigits: 1,\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2,\n                      useGrouping: true,\n                    })\n                    .replace(',', '.')}\n                </TextSum>\n              </TransactionItem>\n              <TransactionItem type={row.type.toString()}>\n                <DeleteBtn\n                  // onClick={handleDelete(row._id)}\n                  // disabled={isDeleting}\n                  onClick={() => dispatch(deleteTransaction(row._id))}\n                >\n                  Delete\n                  {/* {isLoading ? 'Deleting' : 'Delete'} */}\n                  {/* {isDeleting ? 'Deleting' : 'Delete'} */}\n                </DeleteBtn>\n                <EditBtnMobile onClick={() => handleEdit(row._id)}>\n                  <IconBtnMobile src={icon} alt=\"edit\" />\n                  Edit\n                </EditBtnMobile>\n              </TransactionItem>\n            </TransactionList>\n          ))\n        ) : (\n          <NoTransactionMob>\n            NO TRANSACTIONS <SpanNoTran>(please add transaction)</SpanNoTran>\n          </NoTransactionMob>\n        )}\n      </MobileCardWrapper>\n    );\n  }\n\n  return (\n    <Wrapper>\n      {isEditModalIsOpen && (\n        <Modal onClose={toggleModal}>\n          {/* {transactionUpdate && transactionUpdate._id === row._id && ( */}\n          <UpdateForm\n            transactionUpdate={transactionUpdate}\n            toggleModal={toggleModal}\n          />\n          {/* )} */}\n        </Modal>\n      )}\n      <ToastContainer />\n      <TableWrapper>\n        <Thead>\n          <Tr>\n            <Th>Date</Th>\n            <Th>Type</Th>\n            <LargeTh>Category</LargeTh>\n            <LargeTh>Comment</LargeTh>\n            <ThSum>Sum</ThSum>\n            <Th></Th>\n          </Tr>\n        </Thead>\n\n        <TbodyWrapper>\n          {transactions.length > 0 ? (\n            transactions.map(row => (\n              <TrWrapperTable key={row._id}>\n                <Td>{formatDate(row.date)}</Td>\n                <Td>\n                  {row.type.toString() === 'true' ? (\n                    <Text>+</Text>\n                  ) : (\n                    <Text>-</Text>\n                  )}\n                </Td>\n                <LargeTd>\n                  {row.type.toString() === 'true' ? (\n                    <Text>Income</Text>\n                  ) : (\n                    <Text>{row.category}</Text>\n                  )}\n                </LargeTd>\n                <LargeTd>\n                  {row.comment ? (\n                    <EllipsisText\n                      className=\"cursor\"\n                      onClick={() => toggleRow(row._id)}\n                      text={row.comment}\n                      length={expandedRows[row._id] ? 100 : 20}\n                    />\n                  ) : (\n                    '-'\n                  )}\n                </LargeTd>\n                <TableSum type={row.type.toString()}>\n                  {/* {formatter.format(row.sum)} */}\n                  {row.sum\n                    .toLocaleString('ru-RU', {\n                      minimumIntegerDigits: 1,\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2,\n                      useGrouping: true,\n                    })\n                    .replace(',', '.')}\n                </TableSum>\n                <TableBtn>\n                  <EditBtn\n                    // onClick={toggleModal}\n                    onClick={() => handleEdit(row._id)}\n                  >\n                    <IconBtn src={icon} alt=\"edit\" />\n                  </EditBtn>\n                  <DeleteBtn\n                    onClick={() => dispatch(deleteTransaction(row._id))}\n\n                    // onClick={handleDelete(row._id)}\n                    // disabled={isDeleting}\n                  >\n                    Delete\n                    {/* {isLoading ? 'Deleting' : 'Delete'} */}\n                    {/* {isDeleting ? 'Deleting' : 'Delete'} */}\n                  </DeleteBtn>\n                </TableBtn>\n              </TrWrapperTable>\n            ))\n          ) : (\n            <NoTransaction>NO TRANSACTIONS</NoTransaction>\n          )}\n        </TbodyWrapper>\n      </TableWrapper>\n      {/* {isLoading ? (\n        <Text>Loading...</Text>\n      ) : (\n        transactions.length > 5 && (\n          <LoadMoreBtn onClick={handleLoadMore}>\n            Load more transactions...\n          </LoadMoreBtn>\n        )\n      )} */}\n    </Wrapper>\n  );\n};\n\nEllipsisText.propTypes = {\n  text: PropTypes.string.isRequired,\n  length: PropTypes.number.isRequired,\n};\n\nexport default Table;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","LabelTitle","_templateObject3","Expense","_templateObject4","_templateObject5","props","theme","expense","Income","_templateObject6","income","NumberInput","_templateObject7","Select","_templateObject8","MenuInputs","_templateObject9","ItemInput","_templateObject10","Textarea","_templateObject11","ToggleContainer","_templateObject12","MenuBtn","_templateObject13","_templateObject14","ExitButton","_templateObject15","AddButton","_templateObject16","ButtonItem","_templateObject17","LabelEdit","_templateObject18","Slider","_templateObject19","Checkbox","_templateObject20","SpanSlash","_templateObject21","_ref","toggleModal","transactionUpdate","_useState","useState","Date","startDate","_slicedToArray","_useState3","_useState4","sum","setSum","_useState5","_useState6","category","setCategory","_useState7","_useState8","comment","setComment","_useState9","_useState10","onSwitch","setOnSwitch","_useState11","_useState12","setTheme","isThemeExpense","dispatch","useDispatch","_jsx","_Fragment","children","ThemeProvider","_jsxs","onSubmit","e","preventDefault","resIncome","updateTransaction","type","date","console","log","resExpenses","htmlFor","name","value","onClick","onChange","target","size","id","placeholder","Datetime","timeFormat","dateString","day","getDate","month","getMonth","year","getFullYear","concat","formatDate","inputProps","style","height","width","border","borderBottom","color","outline","dateFormat","isValidDate","current","today","yesterday","getTime","isAfter","rows","Wrapper","NoTransactionMob","SpanNoTran","MobileCardWrapper","TransactionList","TransactionItem","TitleText","Text","TextSum","IconBtnMobile","EditBtnMobile","NoTransaction","TableWrapper","Thead","Tr","TrWrapperTable","Th","LargeTh","ThSum","TbodyWrapper","Td","_templateObject22","LargeTd","_templateObject23","TableSum","_templateObject24","TableBtn","_templateObject25","IconBtn","_templateObject26","EditBtn","_templateObject27","DeleteBtn","_templateObject28","EllipsisText","text","PropTypes","length","window","innerWidth","_useState2","isMobile","setIsMobile","setTransactionUpdate","expandedRows","setExpandedRows","transactions","useSelector","selectTransactions","isEditModalIsOpen","selectIsModalEditTransactionOpen","useEffect","addEventListener","handleResize","removeEventListener","handleEdit","transactionId","transaction","find","_id","toggleModalEditTransaction","toggleRow","rowId","_objectSpread","_defineProperty","Modal","onClose","UpdateForm","ToastContainer","map","row","toString","className","toLocaleString","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","useGrouping","replace","deleteTransaction","src","icon","alt"],"sourceRoot":""}