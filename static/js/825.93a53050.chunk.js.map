{"version":3,"file":"static/js/825.93a53050.chunk.js","mappings":"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","sources":["components/ChartJS/Chart.styled.js","components/ChartJS/ChartJS.js","components/SelectLabels/SelectLabels.styled.js","components/SelectLabels/SelectLabels.jsx","components/StatisticsList/StatisticsList.styled.js","components/StatisticsList/StatisticsList.jsx","components/Statistics/Statistics.styled.js","components/Statistics/Statistics.jsx","redux/finance/financeSelectors.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Chart = styled.div`\n  width: 280px;\n  height: 280px;\n`;\n","import { Chart as ChartJS, ArcElement, Tooltip, Legend, Title } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { Chart } from './Chart.styled';\n\nChartJS.register(ArcElement, Tooltip, Legend, Title);\n\nexport const ChartJs = ({ statistic }) => {\n  const arrayTotalSum = statistic.result.map(({ totalSum }) => totalSum);\n\n  const category = statistic.result.map(({ category }) => category);\n  const expenses = statistic.transaction.filter(({ type }) => type === false);\n\n  const sum = new Intl.NumberFormat('ru-RU').format(\n    expenses[0] ? expenses[0]?.sum : 0\n  );\n\n  const data = {\n    labels: [],\n    datasets: [\n      {\n        label: category,\n        data: arrayTotalSum.length === 0 ? [1] : arrayTotalSum,\n\n        backgroundColor: [\n          '#FED057',\n          '#FFD8D0',\n          '#FD9498',\n          '#C5BAFF',\n          '#6E78E8',\n          '#4A56E2',\n          '#81E1FF',\n          '#24CCA7',\n          '#00AD84',\n        ],\n        cutout: '70%',\n      },\n    ],\n  };\n\n  const options = {\n    type: 'doughnut',\n    data,\n    responsive: true,\n\n    plugins: {\n      legend: {\n        display: true,\n        position: 'right',\n        maxWidth: 130,\n        maxHeight: 160,\n        labels: {\n          boxWidth: 20,\n          boxHeight: 20,\n          padding: 20,\n        },\n      },\n    },\n  };\n\n  return (\n    <>\n      {sum !== 'не число' && (\n        <Chart>\n          <Doughnut\n            data={data}\n            options={options}\n            plugins={[\n              {\n                id: 'centerText',\n                beforeDatasetsDraw(chart, args, pluginOptions) {\n                  const { ctx } = chart;\n                  ctx.textAlign = 'center';\n                  ctx.font = '18px \"Circe\", Helvetica, Arial, sans-serif';\n\n                  ctx.fillText(\n                    '₴ ' + sum,\n                    chart?.getDatasetMeta(0)?.data[0]?.x,\n                    chart?.getDatasetMeta(0)?.data[0]?.y\n                  );\n                },\n              },\n            ]}\n          />\n        </Chart>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport Select from '@mui/material/Select';\nimport FormControl from '@mui/material/FormControl';\n\nexport const WrapperControl = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 767px) {\n    flex-wrap: nowrap;\n  }\n`;\n\nexport const Control = styled(FormControl)``;\n\nexport const Selec = styled(Select)`\n  border: 1px solid #000000;\n  border-radius: 30px;\n  height: 50px;\n  width: 280px;\n\n  @media screen and (min-width: 767px) {\n    width: 160px;\n  }\n`;\n","import * as React from 'react';\nimport { useState } from 'react';\nimport MenuItem from '@mui/material/MenuItem';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from 'redux/session/sessionSelectors';\n\nimport { Selec, Control, WrapperControl } from './SelectLabels.styled';\n\nexport const SelectLabels = ({ handleSelect }) => {\n  const [year, setYear] = useState(\n    useSelector(selectUser).createdAt.slice(0, 4)\n  );\n  const [month, setMonth] = useState(\n    useSelector(selectUser).createdAt.slice(5, 7)\n  );\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'year':\n        setYear(value);\n        break;\n      case 'month':\n        setMonth(value);\n        break;\n      default:\n        break;\n    }\n\n    handleSelect({\n      year: name === 'year' ? value : year,\n      month: name === 'month' ? value : month,\n    });\n  };\n\n  return (\n    <WrapperControl>\n      <Control sx={{ m: 1 }}>\n        <Selec\n          style={{ borderRadius: '30px' }}\n          value={month}\n          name=\"month\"\n          onChange={handleChange}\n          displayEmpty\n        >\n          <MenuItem value=\"\">\n            <em>Month</em>\n          </MenuItem>\n          <MenuItem value={'01'}>January</MenuItem>\n          <MenuItem value={'02'}>February</MenuItem>\n          <MenuItem value={'03'}>March</MenuItem>\n          <MenuItem value={'04'}>April</MenuItem>\n          <MenuItem value={'05'}>May</MenuItem>\n          <MenuItem value={'06'}>June</MenuItem>\n          <MenuItem value={'07'}>July</MenuItem>\n          <MenuItem value={'08'}>August</MenuItem>\n          <MenuItem value={'09'}>September</MenuItem>\n          <MenuItem value={'10'}>October</MenuItem>\n          <MenuItem value={'11'}>November</MenuItem>\n          <MenuItem value={'12'}>December</MenuItem>\n        </Selec>\n      </Control>\n      <Control sx={{ m: 1 }}>\n        <Selec\n          style={{ borderRadius: '30px' }}\n          value={year}\n          name=\"year\"\n          onChange={handleChange}\n          displayEmpty\n        >\n          <MenuItem value=\"\">\n            <em>Year</em>\n          </MenuItem>\n          <MenuItem value={'2009'}>2009</MenuItem>\n          <MenuItem value={'2010'}>2010</MenuItem>\n          <MenuItem value={'2011'}>2011</MenuItem>\n          <MenuItem value={'2012'}>2012</MenuItem>\n          <MenuItem value={'2013'}>2013</MenuItem>\n          <MenuItem value={'2014'}>2014</MenuItem>\n          <MenuItem value={'2015'}>2015</MenuItem>\n          <MenuItem value={'2016'}>2016</MenuItem>\n          <MenuItem value={'2017'}>2017</MenuItem>\n          <MenuItem value={'2018'}>2018</MenuItem>\n          <MenuItem value={'2019'}>2019</MenuItem>\n          <MenuItem value={'2020'}>2020</MenuItem>\n          <MenuItem value={'2021'}>2021</MenuItem>\n          <MenuItem value={'2022'}>2022</MenuItem>\n          <MenuItem value={'2023'}>2023</MenuItem>\n        </Selec>\n      </Control>\n    </WrapperControl>\n  );\n};\n","import styled from 'styled-components';\n\nexport const HeadList = styled.ul`\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  height: 58px;\n  background: #ffffff;\n  border-radius: 30px;\n  margin-bottom: 14px;\n`;\n\nexport const HeadCat = styled.li`\n  font-family: var(--primary-font-family);\n\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--primary-text-color);\n`;\n\nexport const List = styled.ul`\n  margin-bottom: 14px;\n`;\n\nexport const Item = styled.li`\n  border-bottom: 1px solid #dcdcdf;\n  display: flex;\n  padding: 10px;\n`;\n\nexport const SubList = styled.ul`\n  & :not(:last-child) {\n    margin-bottom: 14px;\n  }\n`;\n\nexport const SubItem = styled.p`\n  font-family: var(--primary-font-family);\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  color: var(--primary-text-color);\n`;\nexport const Elem = styled.p`\n  width: 24px;\n  height: 24px;\n  margin-right: 16px;\n`;\n\nexport const Sum = styled.p`\n  margin-left: auto;\n  font-family: var(--primary-font-family);\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  color: var(--primary-text-color);\n`;\n\nexport const Category = styled.p`\n  font-family: var(--primary-font-family);\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 1.5;\n  color: var(--primary-text-color);\n`;\n\nexport const SubListItem = styled.li`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Type = styled.p`\n  margin-left: auto;\n  color: ${props => (props.expenses ? 'red' : 'green')};\n`;\n","import {\n  List,\n  Item,\n  Elem,\n  Sum,\n  Category,\n  HeadList,\n  HeadCat,\n  SubList,\n  SubItem,\n  SubListItem,\n  Type,\n} from './StatisticsList.styled';\n\nexport const StatisticsList = ({ statistic }) => {\n  const colors = [\n    '#FED057',\n    '#FFD8D0',\n    '#FD9498',\n    '#C5BAFF',\n    '#6E78E8',\n    '#4A56E2',\n    '#81E1FF',\n    '#24CCA7',\n    '#00AD84',\n  ];\n  let expenses;\n  let income;\n\n  if (statistic.transaction[0]?.type === false) {\n    expenses = statistic.transaction[0]?.sum;\n  } else {\n    expenses = statistic.transaction[1]?.sum;\n  }\n\n  if (statistic.transaction[0]?.type === true) {\n    income = statistic.transaction[0]?.sum;\n  } else {\n    income = statistic.transaction[1]?.sum;\n  }\n\n  return (\n    <>\n      <HeadList>\n        <HeadCat>Category</HeadCat>\n        <HeadCat>Sum</HeadCat>\n      </HeadList>\n      <List>\n        {statistic.result.map(({ totalSum, category }, index) => (\n          <Item key={index}>\n            <Elem style={{ backgroundColor: colors[index] }}></Elem>\n            <Category>{category}</Category>\n            <Sum>{totalSum}</Sum>\n          </Item>\n        ))}\n      </List>\n      <SubList>\n        <SubListItem>\n          <SubItem>Expenses:</SubItem>\n          <Type expenses>{expenses ? expenses : 0}</Type>\n        </SubListItem>\n        <SubListItem>\n          <SubItem>Income:</SubItem>\n          <Type>{income ? income : 0}</Type>\n        </SubListItem>\n      </SubList>\n    </>\n  );\n};\n\n// {Object.entries(obj).map(([category, sum], index) => (\n//       <Item key={index}>\n//         <Elem style={{ backgroundColor: colors[index] }}></Elem>\n//         <Category>{category}</Category>\n//         <Sum>{sum}</Sum>\n//       </Item>\n//     ))}\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 0 20px;\n`;\n\nexport const Text = styled.h2`\n  font-family: var(--primary-font-family);\n  font-weight: 400;\n  font-size: 30px;\n  line-height: 1.5;\n  color: var(--primary-text-color);\n  margin-bottom: 8px;\n`;\nexport const SubWrapper = styled.div`\n  @media screen and (min-width: 767px) {\n    display: flex;\n    justify-content: center;\n  }\n`;\n\nexport const Box = styled.div`\n  @media screen and (min-width: 767px) {\n    width: 395px;\n  }\n`;\n","import { ChartJs } from 'components/ChartJS/ChartJS';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SelectLabels } from 'components/SelectLabels/SelectLabels';\nimport {\n  selectStatistic,\n  selectIsLoading,\n} from 'redux/finance/financeSelectors';\nimport { selectToken, selectIsLoggedIn } from 'redux/session/sessionSelectors';\nimport { getTransactionsStatistics } from 'redux/finance/financeOperations';\n\nimport { StatisticsList } from 'components/StatisticsList/StatisticsList';\nimport { Text, Wrapper, SubWrapper, Box } from './Statistics.styled';\n\nexport const Statistics = () => {\n  const [select, setSelect] = useState({ month: '4', year: '2023' });\n\n  const dispatch = useDispatch();\n  const statistic = useSelector(selectStatistic);\n  const loading = useSelector(selectIsLoading);\n  const userLoggedIn = useSelector(selectIsLoggedIn);\n\n  const token = useSelector(selectToken);\n\n  useEffect(() => {\n    if (token && userLoggedIn) {\n      dispatch(getTransactionsStatistics(select));\n    }\n  }, [dispatch, token, userLoggedIn, select]);\n\n  const handleSelect = data => {\n    setSelect(data);\n  };\n\n  return (\n    <>\n      {userLoggedIn && (\n        <Wrapper>\n          <Text>Statistics</Text>\n          <SubWrapper>\n            <>{statistic && !loading && <ChartJs statistic={statistic} />}</>\n\n            <Box>\n              <SelectLabels handleSelect={handleSelect} />\n              {statistic && <StatisticsList statistic={statistic} />}\n            </Box>\n          </SubWrapper>\n        </Wrapper>\n      )}\n    </>\n  );\n};\n\nexport default Statistics;\n","export const selectTransactions = state => state.finance.transactions;\n\nexport const selectCurrentPage = state => state.finance.currentPage;\n\nexport const selectIsLoading = state => state.finance.isLoading;\n\nexport const selectFinanceError = state => state.finance.error;\nexport const selectFilter = state => state.finance.filter;\nexport const selectStatistic = state => state.finance.statistic;\n"],"names":["Chart","styled","_templateObject","_taggedTemplateLiteral","ChartJS","ArcElement","Tooltip","Legend","Title","ChartJs","_ref","_expenses$","statistic","arrayTotalSum","result","map","_ref2","totalSum","category","_ref3","expenses","transaction","filter","_ref4","type","sum","Intl","NumberFormat","format","data","labels","datasets","label","length","backgroundColor","cutout","options","responsive","plugins","legend","display","position","maxWidth","maxHeight","boxWidth","boxHeight","padding","_jsx","_Fragment","children","Doughnut","id","beforeDatasetsDraw","chart","args","pluginOptions","_chart$getDatasetMeta","_chart$getDatasetMeta2","_chart$getDatasetMeta3","_chart$getDatasetMeta4","ctx","textAlign","font","fillText","getDatasetMeta","x","y","WrapperControl","Control","FormControl","_templateObject2","Selec","Select","_templateObject3","SelectLabels","handleSelect","_useState","useState","useSelector","selectUser","createdAt","slice","_useState2","_slicedToArray","year","setYear","_useState3","_useState4","month","setMonth","handleChange","event","_event$target","target","name","value","_jsxs","sx","m","style","borderRadius","onChange","displayEmpty","MenuItem","HeadList","HeadCat","List","Item","_templateObject4","SubList","_templateObject5","SubItem","_templateObject6","Elem","_templateObject7","Sum","_templateObject8","Category","_templateObject9","SubListItem","_templateObject10","Type","_templateObject11","props","StatisticsList","_statistic$transactio","_statistic$transactio4","income","_statistic$transactio2","_statistic$transactio3","_statistic$transactio5","_statistic$transactio6","colors","index","Wrapper","Text","SubWrapper","Box","Statistics","select","setSelect","dispatch","useDispatch","selectStatistic","loading","selectIsLoading","userLoggedIn","selectIsLoggedIn","token","selectToken","useEffect","getTransactionsStatistics","selectTransactions","state","finance","transactions","isLoading"],"sourceRoot":""}