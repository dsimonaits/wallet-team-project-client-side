{"version":3,"file":"static/js/472.a53ac161.chunk.js","mappings":"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","sources":["components/UpdateForm/UpdateForm.styled.js","components/UpdateForm/UpdateForm.jsx","components/Table/Table.styled.js","components/Table/Table.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport Datetime from 'react-datetime';\n\nexport const Div = styled.div`\n  background-color: var(--primary-white-color);\n`;\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 30px 0;\n`;\nexport const LabelTitle = styled.label`\n  font-size: 24px;\n  font-weight: 400;\n  margin: 20px 20px 40px 20px;\n  color: rgba(0, 0, 0, 1);\n`;\nexport const ModalContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  text-align: center;\n  padding-top: 40px;\n  width: 320px;\n  height: auto;\n`;\n\nexport const Expense = styled.p`\n  font-size: 16px;\n  font-weight: 700;\n  margin: 0 11px;\n  cursor: pointer;\n\n  color: ${props => props.theme.expense};\n`;\nexport const Income = styled.p`\n  font-size: 16px;\n  font-weight: 700;\n  margin: 0 11px;\n  color: ${props => props.theme.income};\n\n  cursor: pointer;\n`;\n\nexport const DivRelative = styled.div`\n  position: relative;\n`;\n\nexport const StyledDatetime = styled(Datetime)`\n  &:focus {\n    border-bottom: 2px solid var(--greenblue);\n  }\n  @media screen and (max-width: 768px) {\n    input {\n      min-width: 280px;\n      position: relative;\n    }\n  }\n  @media screen and (min-width: 768px) {\n    input {\n      position: relative;\n      width: 181px;\n      text-align: center;\n    }\n  }\n`;\n\nexport const NumberInput = styled.input`\n  border: transparent;\n  border-bottom: 1px solid #e0e0e0;\n  color: rgba(0, 0, 0, 1);\n  font-size: 18px;\n  outline: none;\n  /* &:focus {\n    border-color:transparent} */\n\n  @media screen and (max-width: 768px) {\n    width: 280px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 181px;\n    text-align: center;\n  }\n`;\nexport const Select = styled.select`\n  /* width: 394px; */\n  border: transparent;\n  border-bottom: 1px solid #e0e0e0;\n  color: rgba(0, 0, 0, 1);\n  font-size: 18px;\n  outline: none;\n  margin-bottom: 40px;\n\n  @media screen and (max-width: 768px) {\n    width: 280px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 394px;\n  }\n`;\nexport const MenuInputs = styled.div`\n  display: flex;\n  align-items: center;\n  @media screen and (max-width: 768px) {\n    display: block;\n  }\n`;\nexport const ItemInput = styled.div`\n  margin-bottom: 40px;\n  padding: 0 20px;\n`;\nexport const Textarea = styled.textarea`\n  width: 394px;\n  border: transparent;\n  border-bottom: 1px solid #e0e0e0;\n  color: rgba(0, 0, 0, 1);\n  font-size: 18px;\n  outline: none;\n  resize: none;\n  height: 30px;\n\n  @media screen and (max-width: 768px) {\n    width: 280px;\n  }\n  @media screen and (min-width: 768px) {\n    width: 394px;\n  }\n`;\nexport const ToggleContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 40px;\n  width: 100%;\n`;\n// export const AddBtn = styled.button`\n//   width: 44px;\n//   height: 44px;\n//   //padding:20px;\n//   border-radius: 50%;\n//   color: rgba(255, 255, 255, 1);\n//   font-size: 30px;\n//   font-weight: 100;\n//   border: 1px solid #ffffff;\n//   background-color: rgba(36, 204, 167, 1);\n//   position: fixed;\n//   bottom: 40px;\n//   right: 40px;\n//   cursor: pointer;\n// `;\nexport const CloseButton = styled.button`\n  height: fit-content;\n  padding: unset;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\n// export const AddIcon = styled.svg`\n//   width: 20px;\n//   height: 20px;\n// `;\nexport const MenuBtn = styled.ul`\n  list-style: none;\n  padding-left: 0px;\n`;\nexport const ExitButton = styled.button`\n  width: 300px;\n  padding-top: 13px;\n  padding-left: 61px;\n  padding-bottom: 13px;\n  padding-right: 55px;\n  background-color: var(--primary-white-color);\n  cursor: pointer;\n  border: 1px solid var(--ascent-text-color);\n  border-radius: 20px;\n  text-align: center;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--ascent-text-color);\n  transition: var(--transition);\n  &:hover,\n  &:focus {\n    box-shadow: -4px 4px 6px 0 rgba(255, 255, 255, 0.5),\n      -4px 4px 6px 0 rgba(116, 125, 139, 0.5),\n      inset -4px -4px 6px 0 rgba(255, 255, 255, 0.5),\n      inset -4px -4px 6px 0 rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport const AddButton = styled.button`\n  width: 300px;\n  padding: 13px 100px;\n  background-color: var(--greenblue);\n  cursor: pointer;\n  border: none;\n  border-radius: 20px;\n  text-align: center;\n  letter-spacing: 0.1em;\n  text-transform: uppercase;\n  font-size: 18px;\n  line-height: 1.5;\n  color: var(--primary-white-color);\n\n  transition: var(--transition);\n  &:hover,\n  &:focus {\n    box-shadow: -4px 4px 6px 0 rgba(255, 255, 255, 0.5),\n      -4px 4px 6px 0 rgba(116, 125, 139, 0.5),\n      inset -4px -4px 6px 0 rgba(255, 255, 255, 0.5),\n      inset -4px -4px 6px 0 rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport const ButtonItem = styled.li`\n  height: 50px;\n  margin-bottom: 20px;\n`;\n\nexport const LabelEdit = styled.label`\n  /* position: relative; */\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 300px;\n  height: 40px;\n  /* display: inline-block; */\n  /* border-radius:40%; */\n  /* background-color: green; */\n`;\n// export const AddIconToggle = styled.svg`\n//   width: 20px;\n//   height: 20px;\n// `;\n\nexport const Slider = styled.span`\n  position: absolute;\n  cursor: pointer;\n  border-radius: 32px;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  border: solid 1px rgba(224, 224, 224, 1);\n  background-color: transparent;\n  &:before {\n    content: '';\n    background-image: url('../../images/Plusbtn.png');\n    position: absolute;\n    width: 44px;\n    height: 44px;\n    top: -3px;\n    border-radius: 50%;\n    background-color: rgba(36, 204, 167, 1);\n    /* color:rgba(255, 255, 255, 1);  */\n    font-size: 30px;\n    font-weight: 100;\n    border: 1px solid #ffffff;\n    background-color: rgba(36, 204, 167, 1);\n    transition-property: background-color, transform;\n    transition-duration: 500ms;\n  }\n`;\n\n/* &:before{\n    content:`${props}`\n  } */\nexport const Checkbox = styled.input`\n  opacity: 0;\n  width: 0;\n  height: 0;\n\n  &:checked + ${Slider} {\n    /* background: green; */\n\n    &:before {\n      transform: translateX(40px);\n      background-color: rgba(255, 101, 150, 1);\n    }\n  }\n`;\nexport const SpanSlash = styled.span`\n  color: #e0e0e0;\n`;\n","import * as React from 'react';\nimport 'react-datetime/css/react-datetime.css';\nimport DateRangeIcon from '@mui/icons-material/DateRange';\nimport { ThemeProvider } from 'styled-components';\n\nimport {\n  Form,\n  LabelTitle,\n  Expense,\n  ToggleContainer,\n  NumberInput,\n  MenuInputs,\n  ItemInput,\n  Textarea,\n  ExitButton,\n  AddButton,\n  ButtonItem,\n  Select,\n  Checkbox,\n  MenuBtn,\n  Income,\n  SpanSlash,\n  LabelEdit,\n  StyledDatetime,\n  DivRelative,\n} from './UpdateForm.styled';\n\nimport { useState } from 'react';\nimport {\n  useDispatch,\n  // useSelector\n} from 'react-redux';\n\nimport { updateTransaction } from '../../redux/finance/financeOperations';\n// import Switch from './Switch';\n\nconst UpdateForm = ({ toggleModal, transactionUpdate }) => {\n  const [startDate, setStartDate] = useState(transactionUpdate.date);\n  const [sum, setSum] = useState(transactionUpdate.sum);\n  const [category, setCategory] = useState(transactionUpdate.category);\n  const [comment, setComment] = useState(transactionUpdate.comment);\n  const [onSwitch, setOnSwitch] = useState(transactionUpdate.type);\n  const [theme, setTheme] = useState('themeInc');\n  const isThemeExpense = theme === 'themeExp';\n  const dispatch = useDispatch();\n\n  const toggleTheme = () => {\n    setTheme(isThemeExpense ? 'greenText' : 'themeExp');\n  };\n\n  const { _id: id } = transactionUpdate;\n\n  const handleChangeSwitch = () => {\n    setOnSwitch(!onSwitch);\n    toggleTheme();\n  };\n\n  const handleCashChange = e => setSum(e.target.value);\n\n  const handelChangeTextarea = e => setComment(e.target.value);\n\n  const handelSubmit = e => {\n    e.preventDefault();\n\n    switch (onSwitch) {\n      case true:\n        dispatch(\n          updateTransaction({\n            id,\n            type: onSwitch,\n            sum: sum,\n            date: startDate,\n            comment: comment,\n          })\n        );\n        toggleModal();\n        break;\n      case false:\n        dispatch(\n          updateTransaction({\n            id,\n            type: onSwitch,\n            sum: sum,\n            category: category,\n            date: startDate,\n            comment: comment,\n          })\n        );\n        toggleModal();\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const themeInc = {\n    income: '#24CCA7',\n    expense: '#dfdfdf',\n  };\n  const themeExp = {\n    expense: '#FF6596',\n    income: '#dfdfdf',\n  };\n\n  // DATE formatter //////////////////////////////////////////\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    return `${day < 10 ? '0' : ''}${day}.${\n      month < 10 ? '0' : ''\n    }${month}.${year}`;\n  }\n\n  // const dateNow = new Date;\n  // const formatDate = `${date} ${dateNow.getHours()}:${dateNow.getMinutes()}:${dateNow.getSeconds()} `\n\n  return (\n    <>\n      <ThemeProvider theme={isThemeExpense ? themeExp : themeInc}>\n        <Form onSubmit={handelSubmit}>\n          <LabelTitle htmlFor=\"\">Edit transaction</LabelTitle>\n          <ToggleContainer>\n            <LabelEdit>\n              <Income>Income</Income>\n              <SpanSlash>/</SpanSlash>\n              <Expense>Expense</Expense>\n              <Checkbox\n                name=\"onSwitch\"\n                defaultChecked={transactionUpdate.type}\n                // checked={onSwitch}\n                value={onSwitch}\n                type=\"checkbox\"\n                onChange={handleChangeSwitch}\n              />\n            </LabelEdit>\n          </ToggleContainer>\n\n          {!onSwitch && (\n            <div>\n              <Select\n                value={category}\n                onChange={e => setCategory(e.target.value)}\n              >\n                <option value=\"Main expenses\">Main expenses</option>\n                <option value=\"Car\">Car</option>\n                <option value=\"Self care\">Self care</option>\n                <option value=\"Child care\">Child care</option>\n                <option value=\"Household products\">Household products</option>\n                <option value=\"Education\">Education</option>\n                <option value=\"Leisure\">Leisure</option>\n                <option value=\"Other\">Other expenses</option>\n              </Select>\n            </div>\n          )}\n\n          <MenuInputs>\n            <ItemInput>\n              <NumberInput\n                size=\"small\"\n                id=\"filled-number\"\n                type=\"number\"\n                placeholder=\"0.00\"\n                name=\"sum\"\n                value={sum}\n                onChange={handleCashChange}\n              />\n            </ItemInput>\n            <ItemInput>\n              <DivRelative>\n                <StyledDatetime\n                  timeFormat={false}\n                  placeholder={transactionUpdate.date}\n                  value={formatDate(startDate)}\n                  closeOnSelect={true}\n                  inputProps={{\n                    style: {\n                      height: 'auto',\n                      width: '181px',\n                      border: 'transparent',\n                      borderBottom: '1px solid #E0E0E0',\n                      color: 'rgba(0, 0, 0, 1) ',\n                      outline: 'none',\n                    },\n                  }}\n                  dateFormat=\"yyyy-MM-DD\"\n                  onChange={value => setStartDate(value.toISOString())}\n                />\n                <DateRangeIcon\n                  color=\"primary\"\n                  fontSize=\"small\"\n                  style={{\n                    position: 'absolute',\n                    top: '0px',\n                    right: '0px',\n                  }}\n                />\n              </DivRelative>\n            </ItemInput>\n          </MenuInputs>\n          <ItemInput>\n            <Textarea\n              value={comment}\n              onChange={handelChangeTextarea}\n              name=\"comment\"\n              rows=\"3\"\n              placeholder=\"Comment\"\n            />\n          </ItemInput>\n\n          <MenuBtn>\n            <ButtonItem>\n              <AddButton\n                type=\"submit\"\n                // onClick={toggleModal}\n              >\n                SAVE\n              </AddButton>\n            </ButtonItem>\n            <ButtonItem>\n              <ExitButton type=\"button\" onClick={toggleModal}>\n                Cancel\n              </ExitButton>\n            </ButtonItem>\n          </MenuBtn>\n        </Form>\n      </ThemeProvider>\n    </>\n  );\n};\n\nexport default UpdateForm;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  overflow-y: auto;\n  height: 350px;\n  display: flex;\n  justify-content: start;\n  align-items: flex-start;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    width: 714px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 725px;\n  }\n\n  ::-webkit-scrollbar {\n    width: 8px;\n    height: 8px;\n  }\n\n  ::-webkit-scrollbar-track {\n    background-color: #dcdcdf;\n  }\n\n  ::-webkit-scrollbar-thumb {\n    border-radius: 20px;\n    width: 20px;\n    height: 20px;\n    background-color: #24cca7;\n  }\n\n  ::-webkit-scrollbar-thumb:hover {\n    background-color: #ff6596;\n    /* box-shadow: 0 0 10px #ff6596; */\n  }\n`;\n\nexport const LoadMoreBtn = styled.button`\n  color: #ffffff;\n  background-color: #24cca7;\n  border: none;\n  padding: 4px 12px;\n  border-radius: 20px;\n  margin: 10px auto;\n  cursor: pointer;\n  transition: box-shadow 250ms ease-in-out, background-color 250ms ease-in-out;\n\n  :hover {\n    /* background-color: #24f0a7; */\n    box-shadow: 0 0 8px #24cca7;\n  }\n`;\n\n// MOBILE ////////////////////////////////////////\nexport const NoTransactionMob = styled.div`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 25px;\n  line-height: 1.5;\n  padding: 10px;\n  text-align: center;\n  margin: 0 auto;\n\n  width: 280px;\n`;\n\nexport const SpanNoTran = styled.span`\n  font-size: 20px;\n  color: #bdbdbd;\n`;\n\nexport const MobileCardWrapper = styled.div`\n  width: 280px;\n  margin: 0 auto;\n  text-align: center;\n  width: 100%;\n`;\n\nexport const TransactionList = styled.ul`\n  padding: 0;\n  background: #ffffff;\n  justify-content: center;\n  list-style: none;\n  border-radius: 10px;\n  width: 280px;\n  margin: 0 auto 8px auto;\n\n  overflow: hidden;\n`;\n\nexport const TransactionItem = styled.li`\n  padding: 12px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-left: 5px solid\n    ${props => (props.type === 'true' ? '#24cca7' : '#ff6596')};\n  cursor: default;\n  :not(:last-child) {\n    border-bottom: 1px solid #dcdcdf;\n  }\n`;\n\nexport const TitleText = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n`;\n\nexport const Text = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: right;\n  padding-left: 5px;\n\n  .cursor {\n    cursor: pointer;\n  }\n`;\n\nexport const TextSum = styled.span`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  text-align: right;\n  color: ${props => (props.type === 'true' ? '#24cca7' : '#ff6596')};\n`;\n\nexport const IconBtnMobile = styled.img`\n  width: 14px;\n  height: 14px;\n  margin-right: 5px;\n`;\n\nexport const EditBtnMobile = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  line-height: 0;\n  padding: 4px;\n  border-radius: 20px;\n  border: none;\n  background: none;\n  cursor: pointer;\n  transition: box-shadow 250ms ease-in-out, background 250ms ease-in-out;\n\n  :hover {\n    /* background: #24cca7; */\n    box-shadow: 0 0 10px #24cca7;\n  }\n`;\n\n// DESCTOP //////////////////////////////////////////////\n\nexport const NoTransaction = styled.div`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 30px;\n  line-height: 1.2;\n  padding: 10px;\n  text-align: center;\n  width: 100%;\n  margin-top: 40px;\n`;\n\nexport const SpanNoTranDes = styled.span`\n  text-align: center;\n  width: 100%;\n\n  font-size: 20px;\n  color: #bdbdbd;\n`;\n\nexport const TableWrapper = styled.table`\n  padding: 10px;\n  border-collapse: collapse;\n  max-height: 310px;\n  margin: 0 auto;\n  table-layout: fixed;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    width: 704px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    width: 714px;\n  }\n`;\n\nexport const Thead = styled.thead``;\n\nexport const Tr = styled.tr`\n  position: relative;\n  padding: 10px;\n  cursor: default;\n\n  ::after {\n    content: ' ';\n    top: 0;\n    left: 0;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background-color: #fff;\n    border-radius: 30px;\n    z-index: -1;\n  }\n`;\n\nexport const TrWrapperTable = styled.tr`\n  padding: 10px;\n  /* height: 80px; */\n  cursor: default;\n\n  :not(:last-child) {\n    border-bottom: 1px solid #dcdcdf;\n    box-shadow: 0px 1px 0px rgba(255, 255, 255, 0.6);\n  }\n`;\n\nexport const Th = styled.th`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n  padding: 10px;\n  text-align: center;\n  width: 15%;\n`;\n\nexport const LargeTh = styled.th`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n  padding: 10px;\n  text-align: center;\n  width: 20%;\n`;\n\nexport const ThSum = styled.th`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 27px;\n  padding: 10px;\n  text-align: right;\n  width: 15%;\n`;\n////////////////////////////////////////////////////////////\n\nexport const TbodyWrapper = styled.tbody``;\n\nexport const Td = styled.td`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  padding: 10px;\n  text-align: center;\n  width: 15%;\n\n  .cursor {\n    cursor: pointer;\n  }\n`;\n\nexport const LargeTd = styled.td`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 400;\n  font-size: 16px;\n  line-height: 24px;\n  padding: 10px;\n  text-align: center;\n  width: 15%;\n\n  .cursor {\n    cursor: pointer;\n  }\n  width: 20%;\n`;\n\nexport const TableSum = styled.td`\n  font-family: 'Circe';\n  font-style: normal;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 24px;\n  padding: 10px;\n  text-align: right;\n  color: ${props => (props.type === 'true' ? '#24cca7' : '#ff6596')};\n`;\n\n////////////////////////////////////////////////////////\n\nexport const TableBtn = styled.td`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: right;\n  padding: 10px 0 10px 10px;\n  /* gap: 5px; */\n`;\n\nexport const IconBtn = styled.img`\n  width: 14px;\n  height: 14px;\n`;\n\nexport const EditBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  border: none;\n  width: 20px;\n  height: 20px;\n  background: none;\n  cursor: pointer;\n  transition: box-shadow 250ms ease-in-out, background 250ms ease-in-out;\n\n  :hover {\n    box-shadow: 0 0 10px #24cca7;\n  }\n`;\n\nexport const DeleteBtn = styled.button`\n  color: #ffffff;\n  background-color: #24cca7;\n  border: none;\n  padding: 4px 12px;\n  border-radius: 20px;\n  margin: 0 5px;\n  cursor: pointer;\n  transition: box-shadow 250ms ease-in-out, background-color 250ms ease-in-out;\n\n  :hover {\n    box-shadow: 0 0 8px #24cca7;\n  }\n`;\n\nexport const GifContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteTransaction } from '../../redux/finance/financeOperations';\nimport { selectTransactions } from '../../redux/finance/financeSelectors';\nimport EllipsisText from 'react-ellipsis-text';\n\nimport icon from '../../images/pencil.png';\n\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\n// Edit /////////////////////\nimport Modal from 'components/Modal/Modal';\nimport UpdateForm from 'components/UpdateForm/UpdateForm';\nimport { toggleModalEditTransaction } from '../../redux/global/globalSlice';\nimport { selectIsModalEditTransactionOpen } from '../../redux/global/globalSelectors';\n\n// STYLE ////////////////////////////////////\nimport {\n  NoTransaction,\n  SpanNoTranDes,\n  SpanNoTran,\n  NoTransactionMob,\n  Wrapper,\n  MobileCardWrapper,\n  TransactionList,\n  TransactionItem,\n  TitleText,\n  Text,\n  TextSum,\n  EditBtnMobile,\n  IconBtnMobile,\n  TableWrapper,\n  TbodyWrapper,\n  Thead,\n  Tr,\n  TrWrapperTable,\n  Th,\n  LargeTh,\n  ThSum,\n  Td,\n  LargeTd,\n  TableSum,\n  TableBtn,\n  EditBtn,\n  IconBtn,\n  DeleteBtn,\n  GifContainer,\n} from './Table.styled';\n\n// COMPONENT //////////////////////////////////////////////////////\n\nconst Table = () => {\n  const [isMobile, setIsMobile] = useState(window.innerWidth <= 767);\n  const [transactionUpdate, setTransactionUpdate] = useState(null);\n  const [expandedRows, setExpandedRows] = useState({});\n\n  const transactions = useSelector(selectTransactions);\n  const isEditModalIsOpen = useSelector(selectIsModalEditTransactionOpen);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    window.addEventListener('resize', handleResize);\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, [dispatch]);\n\n  const handleResize = () => {\n    setIsMobile(window.innerWidth <= 767);\n  };\n\n  const handleEdit = transactionId => {\n    const transaction = transactions.find(({ _id }) => _id === transactionId);\n    setTransactionUpdate(transaction);\n    toggleModal();\n  };\n\n  const toggleModal = () => {\n    dispatch(toggleModalEditTransaction());\n  };\n\n  // DATE formatter //////////////////////////////////////////\n  function formatDate(dateString) {\n    const date = new Date(dateString);\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    return `${day < 10 ? '0' : ''}${day}.${\n      month < 10 ? '0' : ''\n    }${month}.${year}`;\n  }\n\n  // TOGGLE for comment //////////////////////////////////\n  function toggleRow(rowId) {\n    setExpandedRows({\n      ...expandedRows,\n      [rowId]: !expandedRows[rowId],\n    });\n  }\n\n  // MOBILE ///////////////////////////////////////////////////////\n\n  if (isMobile) {\n    return (\n      <MobileCardWrapper>\n        {isEditModalIsOpen && (\n          <Modal onClose={toggleModal}>\n            <UpdateForm\n              transactionUpdate={transactionUpdate}\n              toggleModal={toggleModal}\n            />\n            {/* )} */}\n          </Modal>\n        )}\n        <ToastContainer />\n        {transactions.length > 0 ? (\n          transactions.map(row => (\n            <TransactionList key={row._id}>\n              {/* <TransactionItem row={row} /> */}\n              <TransactionItem type={row.type.toString()}>\n                <TitleText>Date:</TitleText> <Text>{formatDate(row.date)}</Text>\n              </TransactionItem>\n              <TransactionItem type={row.type.toString()}>\n                <TitleText>Type:</TitleText>\n                {row.type.toString() === 'true' ? (\n                  <Text>+</Text>\n                ) : (\n                  <Text>-</Text>\n                )}\n              </TransactionItem>\n              <TransactionItem type={row.type.toString()}>\n                <TitleText>Category:</TitleText>\n                <Text>\n                  {row.type.toString() === 'true' ? (\n                    <Text>Income</Text>\n                  ) : (\n                    <Text>{row.category}</Text>\n                  )}\n                </Text>\n              </TransactionItem>\n              <TransactionItem type={row.type.toString()}>\n                <TitleText>Comment:</TitleText>\n                <Text>\n                  {row.comment ? (\n                    <EllipsisText\n                      className=\"cursor\"\n                      onClick={() => toggleRow(row._id)}\n                      text={row.comment}\n                      length={expandedRows[row._id] ? 100 : 15}\n                    />\n                  ) : (\n                    '-'\n                  )}\n                </Text>\n              </TransactionItem>\n              <TransactionItem type={row.type.toString()}>\n                <TitleText>Sum:</TitleText>\n                <TextSum type={row.type.toString()}>\n                  {row.sum\n                    .toLocaleString('ru-RU', {\n                      minimumIntegerDigits: 1,\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2,\n                      useGrouping: true,\n                    })\n                    .replace(',', '.')}\n                </TextSum>\n              </TransactionItem>\n              <TransactionItem type={row.type.toString()}>\n                <DeleteBtn onClick={() => dispatch(deleteTransaction(row._id))}>\n                  Delete\n                  {/* {isLoading ? 'Deleting' : 'Delete'} */}\n                  {/*{isDeleting ? 'Deleting' : 'Delete'} */}\n                </DeleteBtn>\n                <EditBtnMobile onClick={() => handleEdit(row._id)}>\n                  <IconBtnMobile src={icon} alt=\"edit\" />\n                  Edit\n                </EditBtnMobile>\n              </TransactionItem>\n            </TransactionList>\n          ))\n        ) : (\n          <>\n            <NoTransactionMob>NO TRANSACTIONS</NoTransactionMob>\n            <SpanNoTran>(please add transaction)</SpanNoTran>\n            <GifContainer>\n              <img\n                width=\"280px\"\n                src=\"https://i.gifer.com/YmvJ.gif\"\n                alt=\"Animated GIF\"\n              />\n            </GifContainer>\n          </>\n        )}\n      </MobileCardWrapper>\n    );\n  }\n\n  return (\n    <Wrapper>\n      {isEditModalIsOpen && (\n        <Modal onClose={toggleModal}>\n          <UpdateForm\n            transactionUpdate={transactionUpdate}\n            toggleModal={toggleModal}\n          />\n        </Modal>\n      )}\n      <ToastContainer />\n      {transactions.length > 0 ? (\n        <TableWrapper>\n          <Thead>\n            <Tr>\n              <Th>Date</Th>\n              <Th>Type</Th>\n              <LargeTh>Category</LargeTh>\n              <LargeTh>Comment</LargeTh>\n              <ThSum>Sum</ThSum>\n              <Th></Th>\n            </Tr>\n          </Thead>\n\n          <TbodyWrapper>\n            {transactions.map(row => (\n              <TrWrapperTable key={row._id}>\n                <Td>{formatDate(row.date)}</Td>\n                <Td>\n                  {row.type.toString() === 'true' ? (\n                    <Text>+</Text>\n                  ) : (\n                    <Text>-</Text>\n                  )}\n                </Td>\n                <LargeTd>\n                  {row.type.toString() === 'true' ? (\n                    <Text>Income</Text>\n                  ) : (\n                    <Text>{row.category}</Text>\n                  )}\n                </LargeTd>\n                <LargeTd>\n                  {row.comment ? (\n                    <EllipsisText\n                      className=\"cursor\"\n                      onClick={() => toggleRow(row._id)}\n                      text={row.comment}\n                      length={expandedRows[row._id] ? 100 : 20}\n                    />\n                  ) : (\n                    '-'\n                  )}\n                </LargeTd>\n                <TableSum type={row.type.toString()}>\n                  {row.sum\n                    .toLocaleString('ru-RU', {\n                      minimumIntegerDigits: 1,\n                      minimumFractionDigits: 2,\n                      maximumFractionDigits: 2,\n                      useGrouping: true,\n                    })\n                    .replace(',', '.')}\n                </TableSum>\n                <TableBtn>\n                  <EditBtn onClick={() => handleEdit(row._id)}>\n                    <IconBtn src={icon} alt=\"edit\" />\n                  </EditBtn>\n                  <DeleteBtn\n                    onClick={() => dispatch(deleteTransaction(row._id))}\n                  >\n                    Delete\n                    {/* {isLoading ? 'Deleting' : 'Delete'} */}\n                    {/* {isDeleting ? 'Deleting' : 'Delete'} */}\n                  </DeleteBtn>\n                </TableBtn>\n              </TrWrapperTable>\n            ))}\n          </TbodyWrapper>\n        </TableWrapper>\n      ) : (\n        <>\n          <NoTransaction>NO TRANSACTIONS</NoTransaction>\n          <SpanNoTranDes>(please add transaction)</SpanNoTranDes>\n          <GifContainer>\n            <img\n              width=\"300px\"\n              src=\"https://i.gifer.com/YmvJ.gif\"\n              alt=\"Animated GIF\"\n            />\n          </GifContainer>\n        </>\n      )}\n    </Wrapper>\n  );\n};\n\nEllipsisText.propTypes = {\n  text: PropTypes.string.isRequired,\n  length: PropTypes.number.isRequired,\n};\n\nexport default Table;\n"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","LabelTitle","_templateObject3","Expense","_templateObject4","_templateObject5","props","theme","expense","Income","_templateObject6","income","DivRelative","_templateObject7","StyledDatetime","Datetime","_templateObject8","NumberInput","_templateObject9","Select","_templateObject10","MenuInputs","_templateObject11","ItemInput","_templateObject12","Textarea","_templateObject13","ToggleContainer","_templateObject14","MenuBtn","_templateObject15","_templateObject16","ExitButton","_templateObject17","AddButton","_templateObject18","ButtonItem","_templateObject19","LabelEdit","_templateObject20","Slider","_templateObject21","Checkbox","_templateObject22","SpanSlash","_templateObject23","_ref","toggleModal","transactionUpdate","_useState","useState","date","_useState2","_slicedToArray","startDate","setStartDate","_useState3","sum","_useState4","setSum","_useState5","category","_useState6","setCategory","_useState7","comment","_useState8","setComment","_useState9","type","_useState10","onSwitch","setOnSwitch","_useState11","_useState12","setTheme","isThemeExpense","dispatch","useDispatch","id","_id","_jsx","_Fragment","children","ThemeProvider","_jsxs","onSubmit","e","preventDefault","updateTransaction","htmlFor","name","defaultChecked","value","onChange","target","size","placeholder","timeFormat","dateString","Date","day","getDate","month","getMonth","year","getFullYear","concat","formatDate","closeOnSelect","inputProps","style","height","width","border","borderBottom","color","outline","dateFormat","toISOString","DateRangeIcon","fontSize","position","top","right","rows","onClick","Wrapper","NoTransactionMob","SpanNoTran","MobileCardWrapper","TransactionList","TransactionItem","TitleText","Text","TextSum","IconBtnMobile","EditBtnMobile","NoTransaction","SpanNoTranDes","TableWrapper","Thead","Tr","TrWrapperTable","Th","LargeTh","ThSum","TbodyWrapper","Td","LargeTd","_templateObject24","TableSum","_templateObject25","TableBtn","_templateObject26","IconBtn","_templateObject27","EditBtn","_templateObject28","DeleteBtn","_templateObject29","GifContainer","_templateObject30","EllipsisText","text","PropTypes","length","window","innerWidth","isMobile","setIsMobile","setTransactionUpdate","expandedRows","setExpandedRows","transactions","useSelector","selectTransactions","isEditModalIsOpen","selectIsModalEditTransactionOpen","useEffect","addEventListener","handleResize","removeEventListener","handleEdit","transactionId","transaction","find","toggleModalEditTransaction","toggleRow","rowId","_objectSpread","_defineProperty","Modal","onClose","UpdateForm","ToastContainer","map","row","toString","className","toLocaleString","minimumIntegerDigits","minimumFractionDigits","maximumFractionDigits","useGrouping","replace","deleteTransaction","src","icon","alt"],"sourceRoot":""}